/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/managedkafka/v1/resources.proto

// Protobuf Java Version: 3.25.5
package com.google.cloud.managedkafka.v1;

public final class ResourcesProto {
  private ResourcesProto() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_Cluster_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_Cluster_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_Cluster_LabelsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_Cluster_LabelsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_CapacityConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_CapacityConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_RebalanceConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_RebalanceConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_NetworkConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_NetworkConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_AccessConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_AccessConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_GcpConfig_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_GcpConfig_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_Topic_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_Topic_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_Topic_ConfigsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_Topic_ConfigsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_PartitionsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_PartitionsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConsumerPartitionMetadata_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConsumerPartitionMetadata_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConsumerGroup_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConsumerGroup_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_ConsumerGroup_TopicsEntry_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_ConsumerGroup_TopicsEntry_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_managedkafka_v1_OperationMetadata_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_managedkafka_v1_OperationMetadata_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\n,google/cloud/managedkafka/v1/resources"
          + ".proto\022\034google.cloud.managedkafka.v1\032\037go"
          + "ogle/api/field_behavior.proto\032\031google/ap"
          + "i/resource.proto\032\037google/protobuf/timest"
          + "amp.proto\"\362\005\n\007Cluster\022B\n\ngcp_config\030\t \001("
          + "\0132\'.google.cloud.managedkafka.v1.GcpConf"
          + "igB\003\340A\002H\000\022\021\n\004name\030\001 \001(\tB\003\340A\010\0224\n\013create_t"
          + "ime\030\002 \001(\0132\032.google.protobuf.TimestampB\003\340"
          + "A\003\0224\n\013update_time\030\003 \001(\0132\032.google.protobu"
          + "f.TimestampB\003\340A\003\022F\n\006labels\030\004 \003(\01321.googl"
          + "e.cloud.managedkafka.v1.Cluster.LabelsEn"
          + "tryB\003\340A\001\022J\n\017capacity_config\030\005 \001(\0132,.goog"
          + "le.cloud.managedkafka.v1.CapacityConfigB"
          + "\003\340A\002\022L\n\020rebalance_config\030\010 \001(\0132-.google."
          + "cloud.managedkafka.v1.RebalanceConfigB\003\340"
          + "A\001\022?\n\005state\030\n \001(\0162+.google.cloud.managed"
          + "kafka.v1.Cluster.StateB\003\340A\003\032-\n\013LabelsEnt"
          + "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"F\n\005St"
          + "ate\022\025\n\021STATE_UNSPECIFIED\020\000\022\014\n\010CREATING\020\001"
          + "\022\n\n\006ACTIVE\020\002\022\014\n\010DELETING\020\003:w\352At\n#managed"
          + "kafka.googleapis.com/Cluster\022:projects/{"
          + "project}/locations/{location}/clusters/{"
          + "cluster}*\010clusters2\007clusterB\021\n\017platform_"
          + "config\"D\n\016CapacityConfig\022\027\n\nvcpu_count\030\001"
          + " \001(\003B\003\340A\002\022\031\n\014memory_bytes\030\002 \001(\003B\003\340A\002\"\250\001\n"
          + "\017RebalanceConfig\022E\n\004mode\030\001 \001(\01622.google."
          + "cloud.managedkafka.v1.RebalanceConfig.Mo"
          + "deB\003\340A\001\"N\n\004Mode\022\024\n\020MODE_UNSPECIFIED\020\000\022\020\n"
          + "\014NO_REBALANCE\020\001\022\036\n\032AUTO_REBALANCE_ON_SCA"
          + "LE_UP\020\002\"$\n\rNetworkConfig\022\023\n\006subnet\030\002 \001(\t"
          + "B\003\340A\002\"Y\n\014AccessConfig\022I\n\017network_configs"
          + "\030\001 \003(\0132+.google.cloud.managedkafka.v1.Ne"
          + "tworkConfigB\003\340A\002\"\222\001\n\tGcpConfig\022F\n\raccess"
          + "_config\030\003 \001(\0132*.google.cloud.managedkafk"
          + "a.v1.AccessConfigB\003\340A\002\022=\n\007kms_key\030\002 \001(\tB"
          + ",\340A\001\340A\005\372A#\n!cloudkms.googleapis.com/Cryp"
          + "toKey\"\327\002\n\005Topic\022\021\n\004name\030\001 \001(\tB\003\340A\010\022\034\n\017pa"
          + "rtition_count\030\002 \001(\005B\003\340A\002\022\"\n\022replication_"
          + "factor\030\003 \001(\005B\006\340A\002\340A\005\022F\n\007configs\030\004 \003(\01320."
          + "google.cloud.managedkafka.v1.Topic.Confi"
          + "gsEntryB\003\340A\001\032.\n\014ConfigsEntry\022\013\n\003key\030\001 \001("
          + "\t\022\r\n\005value\030\002 \001(\t:\0028\001:\200\001\352A}\n!managedkafka"
          + ".googleapis.com/Topic\022Iprojects/{project"
          + "}/locations/{location}/clusters/{cluster"
          + "}/topics/{topic}*\006topics2\005topic\"\341\001\n\025Cons"
          + "umerTopicMetadata\022\\\n\npartitions\030\001 \003(\0132C."
          + "google.cloud.managedkafka.v1.ConsumerTop"
          + "icMetadata.PartitionsEntryB\003\340A\001\032j\n\017Parti"
          + "tionsEntry\022\013\n\003key\030\001 \001(\005\022F\n\005value\030\002 \001(\01327"
          + ".google.cloud.managedkafka.v1.ConsumerPa"
          + "rtitionMetadata:\0028\001\"G\n\031ConsumerPartition"
          + "Metadata\022\023\n\006offset\030\001 \001(\003B\003\340A\002\022\025\n\010metadat"
          + "a\030\002 \001(\tB\003\340A\001\"\201\003\n\rConsumerGroup\022\021\n\004name\030\001"
          + " \001(\tB\003\340A\010\022L\n\006topics\030\002 \003(\01327.google.cloud"
          + ".managedkafka.v1.ConsumerGroup.TopicsEnt"
          + "ryB\003\340A\001\032b\n\013TopicsEntry\022\013\n\003key\030\001 \001(\t\022B\n\005v"
          + "alue\030\002 \001(\01323.google.cloud.managedkafka.v"
          + "1.ConsumerTopicMetadata:\0028\001:\252\001\352A\246\001\n)mana"
          + "gedkafka.googleapis.com/ConsumerGroup\022Zp"
          + "rojects/{project}/locations/{location}/c"
          + "lusters/{cluster}/consumerGroups/{consum"
          + "er_group}*\016consumerGroups2\rconsumerGroup"
          + "\"\200\002\n\021OperationMetadata\0224\n\013create_time\030\001 "
          + "\001(\0132\032.google.protobuf.TimestampB\003\340A\003\0221\n\010"
          + "end_time\030\002 \001(\0132\032.google.protobuf.Timesta"
          + "mpB\003\340A\003\022\023\n\006target\030\003 \001(\tB\003\340A\003\022\021\n\004verb\030\004 \001"
          + "(\tB\003\340A\003\022\033\n\016status_message\030\005 \001(\tB\003\340A\003\022#\n\026"
          + "requested_cancellation\030\006 \001(\010B\003\340A\003\022\030\n\013api"
          + "_version\030\007 \001(\tB\003\340A\003B\325\002\n com.google.cloud"
          + ".managedkafka.v1B\016ResourcesProtoP\001ZDclou"
          + "d.google.com/go/managedkafka/apiv1/manag"
          + "edkafkapb;managedkafkapb\252\002\034Google.Cloud."
          + "ManagedKafka.V1\312\002\034Google\\Cloud\\ManagedKa"
          + "fka\\V1\352\002\037Google::Cloud::ManagedKafka::V1"
          + "\352Ax\n!cloudkms.googleapis.com/CryptoKey\022S"
          + "projects/{project}/locations/{location}/"
          + "keyRings/{key_ring}/cryptoKeys/{crypto_k"
          + "ey}b\006proto3"
    };
    descriptor =
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
            descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {
              com.google.api.FieldBehaviorProto.getDescriptor(),
              com.google.api.ResourceProto.getDescriptor(),
              com.google.protobuf.TimestampProto.getDescriptor(),
            });
    internal_static_google_cloud_managedkafka_v1_Cluster_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_google_cloud_managedkafka_v1_Cluster_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_Cluster_descriptor,
            new java.lang.String[] {
              "GcpConfig",
              "Name",
              "CreateTime",
              "UpdateTime",
              "Labels",
              "CapacityConfig",
              "RebalanceConfig",
              "State",
              "PlatformConfig",
            });
    internal_static_google_cloud_managedkafka_v1_Cluster_LabelsEntry_descriptor =
        internal_static_google_cloud_managedkafka_v1_Cluster_descriptor.getNestedTypes().get(0);
    internal_static_google_cloud_managedkafka_v1_Cluster_LabelsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_Cluster_LabelsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_managedkafka_v1_CapacityConfig_descriptor =
        getDescriptor().getMessageTypes().get(1);
    internal_static_google_cloud_managedkafka_v1_CapacityConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_CapacityConfig_descriptor,
            new java.lang.String[] {
              "VcpuCount", "MemoryBytes",
            });
    internal_static_google_cloud_managedkafka_v1_RebalanceConfig_descriptor =
        getDescriptor().getMessageTypes().get(2);
    internal_static_google_cloud_managedkafka_v1_RebalanceConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_RebalanceConfig_descriptor,
            new java.lang.String[] {
              "Mode",
            });
    internal_static_google_cloud_managedkafka_v1_NetworkConfig_descriptor =
        getDescriptor().getMessageTypes().get(3);
    internal_static_google_cloud_managedkafka_v1_NetworkConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_NetworkConfig_descriptor,
            new java.lang.String[] {
              "Subnet",
            });
    internal_static_google_cloud_managedkafka_v1_AccessConfig_descriptor =
        getDescriptor().getMessageTypes().get(4);
    internal_static_google_cloud_managedkafka_v1_AccessConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_AccessConfig_descriptor,
            new java.lang.String[] {
              "NetworkConfigs",
            });
    internal_static_google_cloud_managedkafka_v1_GcpConfig_descriptor =
        getDescriptor().getMessageTypes().get(5);
    internal_static_google_cloud_managedkafka_v1_GcpConfig_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_GcpConfig_descriptor,
            new java.lang.String[] {
              "AccessConfig", "KmsKey",
            });
    internal_static_google_cloud_managedkafka_v1_Topic_descriptor =
        getDescriptor().getMessageTypes().get(6);
    internal_static_google_cloud_managedkafka_v1_Topic_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_Topic_descriptor,
            new java.lang.String[] {
              "Name", "PartitionCount", "ReplicationFactor", "Configs",
            });
    internal_static_google_cloud_managedkafka_v1_Topic_ConfigsEntry_descriptor =
        internal_static_google_cloud_managedkafka_v1_Topic_descriptor.getNestedTypes().get(0);
    internal_static_google_cloud_managedkafka_v1_Topic_ConfigsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_Topic_ConfigsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_descriptor =
        getDescriptor().getMessageTypes().get(7);
    internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_descriptor,
            new java.lang.String[] {
              "Partitions",
            });
    internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_PartitionsEntry_descriptor =
        internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_descriptor
            .getNestedTypes()
            .get(0);
    internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_PartitionsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConsumerTopicMetadata_PartitionsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_managedkafka_v1_ConsumerPartitionMetadata_descriptor =
        getDescriptor().getMessageTypes().get(8);
    internal_static_google_cloud_managedkafka_v1_ConsumerPartitionMetadata_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConsumerPartitionMetadata_descriptor,
            new java.lang.String[] {
              "Offset", "Metadata",
            });
    internal_static_google_cloud_managedkafka_v1_ConsumerGroup_descriptor =
        getDescriptor().getMessageTypes().get(9);
    internal_static_google_cloud_managedkafka_v1_ConsumerGroup_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConsumerGroup_descriptor,
            new java.lang.String[] {
              "Name", "Topics",
            });
    internal_static_google_cloud_managedkafka_v1_ConsumerGroup_TopicsEntry_descriptor =
        internal_static_google_cloud_managedkafka_v1_ConsumerGroup_descriptor
            .getNestedTypes()
            .get(0);
    internal_static_google_cloud_managedkafka_v1_ConsumerGroup_TopicsEntry_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_ConsumerGroup_TopicsEntry_descriptor,
            new java.lang.String[] {
              "Key", "Value",
            });
    internal_static_google_cloud_managedkafka_v1_OperationMetadata_descriptor =
        getDescriptor().getMessageTypes().get(10);
    internal_static_google_cloud_managedkafka_v1_OperationMetadata_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_managedkafka_v1_OperationMetadata_descriptor,
            new java.lang.String[] {
              "CreateTime",
              "EndTime",
              "Target",
              "Verb",
              "StatusMessage",
              "RequestedCancellation",
              "ApiVersion",
            });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.FieldBehaviorProto.fieldBehavior);
    registry.add(com.google.api.ResourceProto.resource);
    registry.add(com.google.api.ResourceProto.resourceDefinition);
    registry.add(com.google.api.ResourceProto.resourceReference);
    com.google.protobuf.Descriptors.FileDescriptor.internalUpdateFileDescriptor(
        descriptor, registry);
    com.google.api.FieldBehaviorProto.getDescriptor();
    com.google.api.ResourceProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
